{
  "name": "attachmediastream",
  "version": "1.0.0",
  "description": "cross-browser way to attach a media stream to a video element.",
  "main": "attachmediastream.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/HenrikJoreteg/attachMediaStream"
  },
  "keywords": [
    "browser",
    "getUserMedia",
    "browserify",
    "WebRTC",
    "video"
  ],
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "license": "MIT",
  "devDependencies": {
    "browserify": "2.x"
  },
  "readme": "# attachMediaStream\n\n## What is this?\n\nA tiny browser module for attaching a media stream to a video element. It handles the differences between browsers.\n\nSuitable for use with browserify/CommonJS on the client. \n\nIf you're not using browserify or you want AMD support use `attachmediastream.bundle.js`.\n\n\n## Installing\n\n```\nnpm install attachmediastream\n```\n\n## How to use it\n\n\nMakes it easy to attach video streams to video tags.\n\n```js\nvar getUserMedia = require('getusermedia');\nvar attachMediaStream = require('attachmediastream');\n\n// get user media\ngetUserMedia(function (err, stream) {\n    // if the browser doesn't support user media\n    // or the user says \"no\" the error gets passed\n    // as the first argument.\n    if (err) {\n      console.log('failed');\n    } else {\n      console.log('got a stream', stream);  \n       \n      // attaches a stream to an element (it returns the element)\n      var videoEl = attachMediaStream(stream, document.getElementById('myVideo'));\n\n      // if you don't pass an element it will create a video tag\n      var generatedVideoEl = attachMediaStream(stream);\n\n      // you can also pass options\n      var videoEl = attachMediaStream(stream, someEl, {\n        // this will set the autoplay attribute on the video tag\n        // this is true by default but you can turn it off with this option.\n        autoplay: true, \n        \n        // let's you mirror the video. It's false by default, but it's common \n        // to mirror video when showing a user their own video feed.\n        // This makes that easy.\n        mirror: true,\n\n        // muted is false, by default\n        // this will mute the video. Again, this is a good idea when showing\n        // a user their own video. Or there will be feedback issues.\n        muted: true\n      });\n\n    }\n});\n```\n\n## Why? \n\nBrowsers used to to this very differently. This is now less true than it used to be. It's fairly safe to just use `URL.createObjectUrl(stream)`.\n\nHowever, it's nice to know it will work if that's not true and it's also handy to be able to control mirroring, muting, autoplay in one shot with sane defaults.\n\n\n## Caveats\n\nAs of writing this, FireFox doesn't let you show local video feed more than once on a page and trying to do so will result in none of them playing and it appearing broken.\n\nAs a result the `test.html` file won't work in FireFox stable unless you do one at a time.\n\n\n## Other Details\n\nThe module's main function returns the element if successful and `false` otherwise. But if you're able to getUserMedia to begin with, attaching it shouldn't really fail.\n\n\n## License\n\nMIT\n\n\n## Created By\n\nIf you like this, follow [@HenrikJoreteg](http://twitter.com/henrikjoreteg) on twitter.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/HenrikJoreteg/attachMediaStream/issues"
  },
  "homepage": "https://github.com/HenrikJoreteg/attachMediaStream",
  "_id": "attachmediastream@1.0.0",
  "_shasum": "8edc968cfbb7551ee5357f4b0f870dc5250b36ca",
  "_from": "attachmediastream@1.0.0",
  "_resolved": "https://registry.npmjs.org/attachmediastream/-/attachmediastream-1.0.0.tgz"
}
